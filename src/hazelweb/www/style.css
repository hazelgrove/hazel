/* fira-mono-regular - greek-ext_greek_cyrillic_cyrillic-ext_latin_latin-ext */
@font-face {
  font-family: 'Fira Mono';
  font-style: normal;
  font-weight: 400;
  src: local('Fira Mono Regular'), local('FiraMono-Regular'), url('FiraMono-Regular.woff2') format('woff2');
}

:root {
  --opseq-hover-color: rgba(255, 195, 0, 0.20);
  --empty-hole-color: #a040a0;
  --title-bar-color: #073f24;
  --page-padding: 15px;

  --code-line-height: 1.5;
  --closed-child-line-height: 1.25;

  --err-hole-color: red;
  --verr-hole-color: #ce5f00;

  --default-code-bg-color: transparent;
  --caret-color: red;

  --exp-bg-color: rgb(197, 253, 197);
  --exp-shadow-color: rgb(135, 204, 135);

  --pat-bg-color: #baf1fe;
  --pat-shadow-color: rgb(130, 176, 202);
  --pat-bright-shadow-color: rgb(117, 187, 228);

  --typ-bg-color: rgb(233, 221, 253);
  --typ-shadow-color: rgb(173, 154, 202);
  --typ-bright-shadow-color: rgb(192, 159, 241);

  --code-radius: 4px;
  --child-border-thickness: 4px;
  --code-shadow-thickness: 1.5px;

  /* necessary for hiding portions of box shadows */
  --para-border-z: 1;
  --delim-group-z: 2;
  --inline-border-z: 3;
  --child-z: 4;
  --caret-z: 5;
}

/* general */
div {
  box-sizing: border-box;
}

.noselect {
  -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}

/* top level */

html, body {
  margin: 0px;
  padding: 0px;
  font-family: Montserrat, sans-serif;
  height: 100%;
  overflow: hidden;
}

#container {
  height: 100%;
}

#root {
  height: 100%;
  display: flex;
  flex-direction: column;
}

/* top bar */

.top-bar {
  padding-top: 10px;
  padding-bottom: 10px;
  padding-left: var(--page-padding);
  padding-right: var(--page-padding);
  background-color: var(--title-bar-color);
  color: white;
  font-weight: bold;
  font-size: 14pt;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
}

#cardstack-controls {
  margin-top: 10px;
  display: flex;
  justify-content: flex-end;
}

#button-centering-container {
  display: flex;
  direction: row;
}

#cardstack-prev-button, #cardstack-next-button {
  cursor: pointer;
}

#cardstack-prev-button:disabled, #cardstack-next-button:disabled {
  cursor: not-allowed;
}

.card-exercise-number {
  font-size: 18px;
  font-weight: bold;
  line-height: 0%;
  white-space: pre;
}

.logo-text {
  color: white;
  text-decoration: none;
  margin-right: var(--page-padding);
}

/* arrangement of main area */

.main-area {
  flex-grow: 1;
  background-color: wheat;
  display: flex;
  flex-direction: row;
}

.flex-wrapper {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.page-area {
  flex-grow: 1;
  /* enable scroll */
  height: 0px;
  overflow-y: auto;

  padding-left: var(--page-padding);
  padding-right: var(--page-padding);
  padding-top: var(--page-padding);
}

/* sidebars */

.collapsible-sidebar {
  width: 400px;
  flex-shrink: 0;
  transition: width 0.3s ease;
  overflow-x: auto;
}

.collapsed-sidebar {
  width: 24px;
}

/* Set width to zero to have the sidebar "slide away" */
#collapsible-left-bar {
  /* Need to reverse the text direction to make the left bar
   * overflow to the left during its hide animation.
   */
  direction: rtl;
}

#collapsible-right-bar {

}

.sidebar {
  width: auto;
  height: 100%;
  direction: ltr; /* reset text direction */
  background-color: tan;
  display: flex;
  flex-direction: column;
  padding-top: 7px;
}

.sidebar-tab {
  height: 20px;
  flex-shrink: 0;
  padding: 4px 7px 4px 7px;
  display: flex;
  align-items: center; /* vertical alignment */
}

#left-tab {
  justify-content: flex-end;
}

#right-tab {
  justify-content: flex-start;
}

.sidebar-tab-icon {
  width: 9px;
  height: 9px;
  flex-shrink: 0;
  fill: #41392c;
  display: block; /* MUST do this: inline elements have in-built vertical margins */
}

.sidebar-body-slider {
  width: 100%;
  height: 100%;
  display: flex;
}

#slidable-left-bar-body {
  padding-left: 7px;
  direction: rtl;
}

#slidable-right-bar-body {
  padding-right: 7px;
}

.sidebar-body {
  flex-grow: 1;
  width: calc(100% - 7px);
  height: 100%;
  direction: ltr; /* reset text direction */
  display: flex;
  flex-direction: column;
}

.sidebar-body-padding {
  width: 7px;
  flex-shrink: 0;
  transition: width 0.3s ease;
  height: 100%;
}

#left-bar-body-padding {

}

#right-bar-body-padding {

}

.sidebar-body-padding-expanded {
  width: 28px;
}

/* panels */

.panel {
  outline: 1px solid var(--title-bar-color);
  background-color: #FEFEEA;
  /* box-shadow: 2px 2px 0px 0px #af8e63; */
  margin-bottom: 7px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.title-bar {
  text-transform: uppercase;
  color: white;
  padding: 3px;
  padding-right: 0px;
  font-size: 10pt;
  font-weight: bold;
  background-color: var(--title-bar-color);
}

.panel-title-bar {

}

.panel-body {
  flex-grow: 1;
  /* enable scroll */
  height: 0px;
  overflow-y: auto;
}

/* cursor inspector */

.cursor-inspector-outer {

}

.cursor-OK.cursor-inspector {
  outline: 1px solid var(--title-bar-color);
}

.cursor-TypeInconsistency.cursor-inspector {
  outline: 1px solid #8e0000;
}

.cursor-BindingError.cursor-inspector {
  outline: 1px solid #ce5f00;
}

.cursor-Keyword.cursor-inspector {
  outline: 1px solid #ce5f00;
}

.cursor-OK .title-bar {
  background-color: var(--title-bar-color);
}

.cursor-TypeInconsistency .title-bar {
  background-color: #8e0000;
}

.cursor-BindingError .title-bar {
  background-color: #ce5f00;
}

.cursor-Keyword .titlebar {
	background-color: #ce5f00;
}

.typebar, .infobar {
  font-size: 125%;
  padding: 5px;
  min-height: 35px;
  display: flex;
  align-items: center;
}

.special-msg-bar {
  font-size: 12pt;
  display: flex;
  align-items: center;
}

.cursor-OK .typebar, .cursor-OK .infobar {
  background-color: #FEFEEA;
}

.cursor-TypeInconsistency .typebar, .cursor-TypeInconsistency .infobar {
  background-color: #ffe0e0;
}

.cursor-BindingError .typebar, .cursor-BindingError .infobar {
  background-color: #fef6ea;
}

.cursor-Keyword .typebar, .cursor-Keyword .infobar {
  background-color: #fef6ea;
}

.matched-type-bar > div {
  display: inline-block;
}

.matched-connective {
  padding-left: 5px;
  padding-right: 5px;
}

/* action panel */

.action-panel {
  flex-grow: 2;
  background-color: var(--title-bar-color);
  cursor: default;
}

.action-panel .title-bar {
  /* background-color: #331757; */
  /* background-color: #163454; */
  background-color: var(--title-bar-color);
}

.action-panel-body {
  /* Hide the bottom shadow of the last button
   * so it aligns nicely with the panel border.
   */
  margin-bottom: -1px;
}

.sub-panel-title {
  text-align: center;
  /* background-color: #163454; */
  background-color: var(--title-bar-color);
  text-transform: uppercase;
  line-height: 30px;
  color: white;
  font-size: 8pt;
}

.action-panel-entry {
  display: grid;
  grid-template-columns: 1fr auto;
}

.action-label {
  padding-left: 5px;
  background-color: #41392c;
  border-left: 1px solid #624c2c;
  border-top: 1px solid #624c2c;
  border-right: 1px solid #0d0a05;
  border-bottom: 1px solid #0d0a05;
}

.info-label {
  border-right: 0px;
}

.keyboard-shortcut {
  padding-left: 5px;
  padding-right: 5px;
  min-width: 30px;
  text-align: center;
  font-family: sans-serif;
  background-color: #8b6040;
  border-left: 1px solid #a0845b;
  border-top: 1px solid #a0845b;
  border-right: 0px;
  border-bottom: 1px solid #0d0a05;
}

.action-label,
.keyboard-shortcut {
  line-height: 30px;
  font-size: 10pt;
  color: white;
}

.action-disabled .action-label,
.action-disabled .keyboard-shortcut {
  /* background-color: #888; */
  /* border: 1px outset #999; */
  color: #BBB;
}

.action-label-with-input {
  display: grid;
  grid-template-columns: auto 1fr auto;
}

.action-label-with-two-inputs {
  display: grid;
  grid-template-columns: auto 1fr 1fr auto;
}

.action-input {
  width: 100%;
  margin-left: 5px;
  padding-right: 10px;
}

.action-input-2 {
  margin-left: 0px;
  padding-right: 5px;
}

.action-input input {
  width: 100%;
  box-sizing: border-box;
  border: 0px;
  border-bottom: 1px solid #ffffff47;
  background-color: rgba(0,0,0,0);
  color: white;
  font-family: "Fira Mono", monospace;
  font-style: italic;
}

.action-input input:focus {
  outline: 0px solid white;
}

#lit_input {
  font-style: normal !important;
}

.action-validity-indicator {
  padding-right: 3px;
}

.action-validity-indicator .invalid-mark {
  opacity: 0.5;
}

/* context inspector */

.context-inspector-panel {
  flex-grow: 1;
}

.context-inspector-body {
  display: grid;
  grid-template-rows:
    1fr /* .the-context */
    auto /* .the-path-view */;
}

.context-is-empty-msg {
  margin-top: 10px;
  opacity: 0.50;
  text-align: center;
  /* text-transform: uppercase; */
  font-size: 75%;
}

.context-entry {
  font-size: 125%;
  border: 1px outset #ffffff;
  border-left: 0px;
  border-right: 0px;
}

.instructional-msg {
  background-color: var(--title-bar-color);
  padding: 5px;
  color: white;
  font-size: 10pt;
}

.static-info {
  background-color: #f0fff3;
  padding: 5px;
}

.dynamic-info {
  background-color: #f0fff3;
  padding-top: 0px;
  padding-left: 18px;
  padding-right: 5px;
  padding-bottom: 5px;
}

.context-entry .SDoc {
  display: inline-block;
}

.the-path-viewer {
}

.path-area-parent {
  min-height: 35px;
  display: flex;
  align-items: center;
  padding-left: 5px;
  padding-right: 5px;
}

.path-area {
  /* background-color: #f0fff3; */
  display: inline-block;
  padding-top: 0px;
  padding-bottom: 0px;
  font-size: 125%;
}

.path-item,
.path-item .inst,
.path-item .inst-var-separator,
.path-item .path-var
{
  display: inline-block;
}

.path-item .inst-var-separator {
  font-weight: bold;
  margin-left: 2px;
  margin-right: 2px;
}

.path-item-separator {
  display: inline-block;
  margin-left: 5px;
  margin-right: 5px;
  font-weight: bold;
  color: #CCC;
}

.trailing-inst {
  display: inline-block;
}

.path-summary {
  /* text-transform: uppercase; */
  /* font-size: 80%; */
  /* color: #444; */
  /* text-align: center; */
  /* padding: 5px; */
  display: flex;
}

.instance-info {
  flex-grow: 1;
  padding: 5px;
  display: flex;
  align-items: center;
  font-size: 10pt;
}

.instance-controls {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  padding-right: 4px;
}

.instance-button-wrapper {
  display: flex;
  align-items: center;
}

.prev-instance,
.next-instance {
  width: 12px;
  height: 12px;
  flex-shrink: 0;
  padding: 4px;
}

.has-prev,
.has-next {
  cursor: pointer;
}

.no-prev,
.no-next {
  opacity: 0.15;
  cursor: default;
}

.hole-name-normal-txt,
.inst-number-normal-txt {
  font-weight: bold;
  /* font-family: monospace; */
}

.hii-summary-inst {
  display: inline-block;
  font-size: 125%;
}

.special-msg {
  font-size: 10pt;
  display: flex;
  align-items: center;
}

/* .path-summary { */
/*   background-color: var(--title-bar-color); */
/*   color: white; */
/*   padding: 3px; */
/* } */

/* options panel */

.options-panel {
  background-color: #EEE;
  outline: 1px solid #444;
}

.options-panel .title-bar {
  background-color: #444;
}

/* page */

.page {
  background-color: white;
  padding: 0.25in;
  margin-bottom: 14px; /* to match parent padding: creates a visible gap at bottom of scroll */
  box-shadow: 3px 3px tan;
  /* border: 1px solid tan; */
  /*max-width: 10in;*/
  width: max-content;
}

.card-caption {
  max-width: 9in;
}

h1 {
  margin-top: 0pt;
  padding-top: 0pt;
  margin-bottom: 0pt;
  color: #444;
}

.cell-status {
  background-color: #EEE;
}

.result-label {
  padding: 3px
}

.result-view {
  padding-left: 25px;
  padding-bottom: 5px;
  background-color: #EEE;
}

.type-indicator {
  width: 100%;
  font-size: 12pt;
}

.type-label {
  background-color: #EEE;
  padding: 3px;
  display: inline-block;
  padding-right: 5px;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 11pt;
  color: gray;
}

.htype-view {
  padding: 3px;
  background-color: #EEE;
  display: inline-block;
}

.typeLbl {
  font-weight: bold;
  font-size: 12pt;
}

.HZElem{
  float: left;
}

.HZElem img{
  float: left;
}

.code {
  font-family: "Fira Mono", monospace;
  // TODO probably unnecessary if we commit to nbsp
  white-space: pre;
  font-size: 14pt;
  line-height: var(--code-line-height);
}
.code.presentation * {
  position: relative;
}
.code.presentation .Term.Rule,
.code.presentation .Term.Case,
.code.presentation .Term.Operand,
.code.presentation .Term.SubBlock,
.code.presentation .LetLine,
.code.presentation .DelimGroup {
  display: inline-block;
}
.code.presentation .Term.NTuple,
.code.presentation .Term.BinOp {
  display: inline;
}
.code-delim {
  font-weight: bold;
}

.static-info .code {
  display: inline;
}

.code-container {
  position: relative;
}
.code.contenteditable {
  /* TODO consolidate #contenteditable vs .contenteditable */
  position: fixed;
  top: 0;
  left: 100%;
  padding: 10px;
  color: transparent;
}
.code.contenteditable:focus {
  outline: 0px;
}

/* https://codepen.io/ArtemGordinsky/pen/GnLBq */
#caret {
  z-index: var(--caret-z);
  position: absolute;
  display: inline-block;
  font-weight: 100;
  margin: calc(0.1 * var(--code-line-height) * 1em) 0;
  height: calc(0.8 * var(--code-line-height) * 1em);
  width: 2px;
  -webkit-animation: 1s blink step-end infinite;
  -moz-animation: 1s blink step-end infinite;
  -ms-animation: 1s blink step-end infinite;
  -o-animation: 1s blink step-end infinite;
  animation: 1s blink step-end infinite;
}
@keyframes "blink" {
  from, to {
    background-color: var(--caret-color);
  }
  50% {
    background-color: transparent;
  }
}
@-moz-keyframes blink {
  from, to {
    background-color: var(--caret-color);
  }
  50% {
    background-color: transparent;
  }
}
@-webkit-keyframes "blink" {
  from, to {
    background-color: var(--caret-color);
  }
  50% {
    background-color: transparent;
  }
}
@-ms-keyframes "blink" {
  from, to {
    background-color: var(--caret-color);
  }
  50% {
    background-color: transparent;
  }
}
@-o-keyframes "blink" {
  from, to {
    background-color: var(--caret-color);
  }
  50% {
    background-color: transparent;
  }
}

/*
.code {
  box-sizing: border-box;
}
*/

.InHole {
  border: 1px dashed var(--err-hole-color);
  margin: -1px;
}
.InVarHole {
  border: 1px dashed var(--verr-hole-color);
  margin: -1px;
}

.OpenChild.Para {
  display: inline-flex;
  flex-direction: row;
  align-items: stretch;
}

.Cursor.Term::before {
  /* set by each term family */
  --bg-color: transparent;
  --shadow-color: transparent;
  content: "";
  position: absolute;
  background-color: var(--bg-color);
  box-shadow: var(--code-shadow-thickness) var(--code-shadow-thickness) 0px 0px var(--shadow-color);
}
.Cursor.Term.has-Inline-OpenChild.Case::before,
.Cursor.Term.has-Para-OpenChild.Case::before {
  top: 0;
  left: calc(-1 * var(--child-border-thickness));
  height: 100%;
  width: var(--child-border-thickness);
  border-radius: var(--code-radius) 0 0 var(--code-radius);
  z-index: var(--para-border-z);
}
.Cursor.Term.has-Inline-OpenChild::before {
  top: calc(100% - var(--child-border-thickness));
  left: 0;
  height: var(--child-border-thickness);
  width: 100%;
  border-radius: 0 0 var(--code-radius) var(--code-radius);
  z-index: var(--inline-border-z);
}
.Cursor.Term.BinOp::before,
.Cursor.Term.NTuple::before {
  border-radius: var(--code-radius);
  /* TODO Fix magic number. These elements
   * have display:inline which causes them
   * to have smaller heights than
   * display:inline-block. Need to figure
   * out cleaner solution, this is stopgap
   * in the meantime. */
  top: calc(100% - 1px);
}
.Cursor.Term.has-Para-OpenChild::before {
  top: 0;
  left: calc(-1 * var(--child-border-thickness));
  height: 100%;
  width: var(--child-border-thickness);
  border-radius: var(--code-radius) 0 0 var(--code-radius);
  z-index: var(--para-border-z);
}
.Cursor.Term.SubBlock.has-Para-OpenChild::before,
.Cursor.Term.SubBlock.has-Inline-OpenChild::before {
  top: 0;
  left: calc(-1 * var(--child-border-thickness));
  height: 100%;
  width: var(--child-border-thickness);
  z-index: var(--para-border-z);
  border-radius: var(--code-radius) 0 var(--code-radius) var(--code-radius);
}
.Cursor.Term.has-Para-OpenChild.Rule::before {
  border-radius: var(--code-radius) 0 var(--code-radius) var(--code-radius);
}
.Cursor.Term.has-Inline-OpenChild.Rule::before {
  top: calc(100% - (var(--child-border-thickness) / 2));
  border-radius: 0 var(--code-radius) var(--code-radius) var(--code-radius);
}

.Cursor.Term.SubBlock .LetLine::before {
  content: "";
  position: absolute;
  background-color: var(--exp-bg-color);
  box-shadow: var(--code-shadow-thickness) var(--code-shadow-thickness) 0px 0px var(--exp-shadow-color);
}
.Cursor.Term.SubBlock.has-Inline-OpenChild .LetLine::before {
  top: calc(100% - (var(--child-border-thickness) / 2));
  left: 0;
  height: var(--child-border-thickness);
  width: 100%;
  border-radius: 0 0 var(--code-radius) 0;
  z-index: var(--inline-border-z);
}
.Cursor.Term.SubBlock.has-Para-OpenChild .LetLine::before {
  top: 0;
  left: calc(-1 * var(--child-border-thickness));
  height: 100%;
  width: var(--child-border-thickness);
  border-radius: var(--code-radius) 0 0 var(--code-radius);
  z-index: var(--para-border-z);
}
.Cursor.Term.SubBlock .Term .LetLine::before {
  all: unset;
}

.Cursor.Term.SubBlock.has-Inline-OpenChild .LetLine > .DelimGroup:first-child {
  border-radius: 0 var(--code-radius) 0 0;
}
.Cursor.Term.SubBlock.has-Inline-OpenChild .LetLine > .DelimGroup:last-child {
  border-radius: var(--code-radius) var(--code-radius) 0 0;
}

.Cursor.Term.Rule.has-Para-OpenChild > .DelimGroup {
  border-radius: 0 var(--code-radius) var(--code-radius) 0;
}

.Cursor.Term.Exp::before {
  --bg-color: var(--exp-bg-color);
  --shadow-color: var(--exp-shadow-color);
}
.Cursor.Term.Pat::before {
  --bg-color: var(--pat-bg-color);
  --shadow-color: var(--pat-shadow-color);
}
.Cursor.Term.Typ::before {
  --bg-color: var(--typ-bg-color);
  --shadow-color: var(--typ-shadow-color);
}

.Term {
  border-radius: var(--code-radius);
}

.Cursor.Term.Exp.Operand.no-children {
  background-color: var(--exp-bg-color);
  box-shadow: var(--code-shadow-thickness) var(--code-shadow-thickness) 0px 0px var(--exp-shadow-color);
}
.Cursor.Term.Pat.Operand.no-children {
  background-color: var(--pat-bg-color);
  box-shadow: var(--code-shadow-thickness) var(--code-shadow-thickness) 0px 0px var(--pat-shadow-color);
}
.Cursor.Term.Typ.Operand.no-children {
  background-color: var(--typ-bg-color);
  box-shadow: var(--code-shadow-thickness) var(--code-shadow-thickness) 0px 0px var(--typ-shadow-color);
}
/*
.Cursor.Term.Operand.no-children {
  top: calc(-1 * var(--code-shadow-thickness));
  left: calc(-1 * var(--code-shadow-thickness));
}
*/

.Var.show-use {
  background-color: rgba(175, 175, 175, 0.3);
}

.Cursor .DelimGroup {
  /* set by each term family */
  --bg-color: transparent;
  --shadow-color: transparent;
  background-color: var(--bg-color);
  box-shadow: var(--code-shadow-thickness) var(--code-shadow-thickness) 0px 0px var(--shadow-color);
  z-index: var(--delim-group-z);
  /*
  top: calc(-1 * var(--code-shadow-thickness));
  left: calc(-1 * var(--code-shadow-thickness));
  */
}
.Cursor.Term.has-Inline-OpenChild .DelimGroup {
  border-radius: var(--code-radius);
}
.Cursor.Term.has-Para-OpenChild .DelimGroup {
  border-radius: 0 var(--code-radius) var(--code-radius) 0;
}
.Cursor.Term.Case .DelimGroup {
  border-radius: 0 var(--code-radius) var(--code-radius) 0;
}
.Cursor.Term.Rule .DelimGroup {
  border-radius: var(--code-radius);
}
.Cursor .Term .DelimGroup {
  background-color: var(--default-code-bg-color);
  box-shadow: none;
  z-index: auto;
  border-radius: none;
  /*
  top: 0;
  left: 0;
  */
}

.Cursor.Exp .DelimGroup {
  --bg-color: var(--exp-bg-color);

  --shadow-color: var(--exp-shadow-color);
}
.Cursor.Pat .DelimGroup {
  --bg-color: var(--pat-bg-color);
  --shadow-color: var(--pat-shadow-color);
}
.Cursor.Typ .DelimGroup {
  --bg-color: var(--typ-bg-color);
  --shadow-color: var(--typ-shadow-color);
}

.Cursor.Term .Term {
  z-index: var(--child-z);
}
.Cursor.Term.Exp .Term.Pat,
.Cursor.Term.Exp .Term.Typ {
  line-height: var(--closed-child-line-height);
}
.Cursor.Term .Term .Term {
  z-index: auto;
  line-height: var(--code-line-height);
}

.Cursor.Term.Exp .Term.Pat {
  background-color: white; /*var(--pat-bg-color);*/
  box-shadow: inset 1px 1px 0.5px 0.5px var(--pat-bright-shadow-color);
}
.Cursor.Term.Exp .Term .Term.Pat {
  background-color: var(--default-code-bg-color);
  box-shadow: none;
}
/*
.Cursor.Term.Exp .Term.Pat > * {
  top: var(--code-shadow-thickness);
  left: var(--code-shadow-thickness);
}
.Cursor.Term.Exp .Term .Term.Pat > * {
  top: 0px;
  left: 0px;
}
*/

.Cursor.Term.Exp .Term.Typ {
  background-color: white; /*var(--typ-bg-color);*/
  box-shadow: inset 1px 1px 0.5px 0.5px var(--typ-bright-shadow-color);
}
.Cursor.Term.Exp .Term .Term.Typ {
  background-color: var(--default-code-bg-color);
  box-shadow: none;
}
/*
.Cursor.Term.Exp .Term.Typ > * {
  top: var(--code-shadow-thickness);
  left: var(--code-shadow-thickness);
}
.Cursor.Term.Exp .Term .Term.Typ > * {
  top: 0px;
  left: 0px;
}
*/

.SDelim-before,
.SDelim-after,
.SOp-before,
.SOp-after,
.SEmptyHole-before,
.SEmptyHole-after,
.SEmptyLine {
  padding-left: 1px;
}

#cell {
  opacity: 0.99;
  /*background-color: transparent;*/
  position: relative;
  width: auto;
  margin-top: 20px;
  background-color: white;
  padding: 10px;
  border: 2px solid #CCC;
}
#cell:focus {
  outline: 0px;
}

.hole-indicator, .skel-hole-indicator, .ap-hole-indicator {
  position: absolute;
  z-index: var(--hole-indicator-z-index);
  background-color: transparent;
  font-family: "Fira Mono", monospace;
  font-size: 20px;
}

.hole-indicator {
  border: 1px dashed var(--nonempty-hole-color);
}

.skel-hole-indicator, .ap-hole-indicator {
  display: none;
}

.skel-hole-indicator, .ap-hole-indicator {
  display: block;
  border-top: 1px dashed var(--nonempty-hole-color);
  border-bottom: 1px dashed var(--nonempty-hole-color);
}

.skel-hole-indicator-first, .ap-hole-indicator-first {
  border-left: 1px dashed var(--nonempty-hole-color);
}

.skel-hole-indicator-first, .ap-hole-indicator-last {
  border-right: 1px dashed var(--nonempty-hole-color);
}

.hole {
  color: var(--empty-hole-color);
}

.OpSeq:hover .skel-binop {
  background-color: var(--opseq-hover-color);
  border-top: 1px solid var(--opseq-hover-color);
  /* box-shadow: 0px 0px 0px 2px rgba(75, 50, 50, 0.20); */
}

.OpSeq:hover .Ap {
  background-color: var(--opseq-hover-color);
  border-top: 1px solid var(--opseq-hover-color);
}

.in_err_hole {
  border: 1px dashed var(--nonempty-hole-color);
}

.in_err_hole > .in_err_hole {
  border: 0px !important;
}

.InVarHole.Keyword {
	font-weight: bold;
}

.Keyword .var {
	font-style: normal;
}

.result-view {
  font-size: 125%;
}

.hole-decorations {
  display: inline-table;
  vertical-align: top;
}

.EmptyHole {
  border-bottom: 1px solid var(--empty-hole-color);
}

.hole-instance {
  border-left: 1px solid rgba(0, 0, 0, 0);
  border-right: 1px solid rgba(0, 0, 0, 0);
  border-top: 1px solid rgba(0, 0, 0, 0);
  margin-left: -1px;
  margin-right: -1px;
  cursor: pointer;
}

.path-instance {
  border: 1px dashed var(--empty-hole-color);
}

.selected-instance {
  border: 1px solid var(--empty-hole-color);
}

.hole-instance:hover {
  border-left: 1px solid var(--empty-hole-color);
  border-right: 1px solid var(--empty-hole-color);
  border-top: 1px solid var(--empty-hole-color);
  border-bottom: 1px solid var(--empty-hole-color);
}

.Hole {
  border-bottom: 1px solid var(--empty-hole-color);
}

.SEmptyHole-num {
  vertical-align: text-bottom;
  font-size: 65%;
  color: #BBB;
  padding-left: 2px;
  padding-right: 2px;
  /* border-bottom: 1px solid var(--empty-hole-color); */
  margin-bottom: -3px;
  /* line-height: initial; */
}

.hole-inst-num {
  vertical-align: super;
  font-size: 50%;
  color: #BBB;
}

.UserNewline {
  vertical-align: middle;
  font-size: 60%;
  color: #BBB;
}

.hide-hole-names .holeName {
  display: none !important;
}

.hide-hole-envs .environment {
  display: none !important;
}

.hole-decorations > .holeName {
  display: table-row;
}

.environment {
  vertical-align: sub;
  font-size: 50%;
  color: var(--empty-hole-color);
  color: black;
}

.hole-decorations > .environment {
  display: table-row;
}

#num_changes_counter {
  display: none;
}

.space {
  margin-right: 2px;
}

.SFailedCastArrow {
  color: red;
  font-weight: bold;
}

.FailedCast {
  background-color: rgba(255, 0, 0, 0.1);
}

.elided {
  color: #AAA;
  font-size: 80%;
}

.color-picker {
  background-color: rgb(230, 230, 230);
  border-radius: 4px;
  display: inline-block;
  padding: 4px;
}

.color {
  width: 16px;
  height: 16px;
  margin: 2px;
  border-radius: 4px;
  float: left;
}

.color.selected {
  border: 1.5px solid black;
}

.palette-view {
  background-color: #EEE;
  border: 1px solid #444;
  padding: 4px;
  margin-left: 5px;
}

.text {
  height: 1em; /* Ensure that empty texts still consume height */
}

.hbox {
  display: flex;
  flex-direction: row;
  align-content: flex-start;
}

.vbox {
  display: flex;
  flex-direction: column;
  align-content: flex-start;
}
